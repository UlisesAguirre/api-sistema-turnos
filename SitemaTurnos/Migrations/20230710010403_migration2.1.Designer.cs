// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SitemaTurnos.DBContext;

#nullable disable

namespace SistemaTurnos.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20230710010403_migration2.1")]
    partial class migration21
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("ReservationTableRestaurant", b =>
                {
                    b.Property<int>("ReservationsAssignedId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TablesRestaurantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservationsAssignedId", "TablesRestaurantId");

                    b.HasIndex("TablesRestaurantId");

                    b.ToTable("TablesReservation", (string)null);

                    b.HasData(
                        new
                        {
                            ReservationsAssignedId = 1,
                            TablesRestaurantId = 1
                        },
                        new
                        {
                            ReservationsAssignedId = 2,
                            TablesRestaurantId = 1
                        },
                        new
                        {
                            ReservationsAssignedId = 3,
                            TablesRestaurantId = 2
                        });
                });

            modelBuilder.Entity("ReservationUser", b =>
                {
                    b.Property<int>("ReservationsDoneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservationsDoneId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UsersReservations", (string)null);

                    b.HasData(
                        new
                        {
                            ReservationsDoneId = 1,
                            UsersId = 1
                        },
                        new
                        {
                            ReservationsDoneId = 2,
                            UsersId = 1
                        },
                        new
                        {
                            ReservationsDoneId = 3,
                            UsersId = 4
                        });
                });

            modelBuilder.Entity("SitemaTurnos.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdClient")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumOfPeople")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReservStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateReservation = new DateTime(2023, 7, 10, 22, 4, 2, 977, DateTimeKind.Local).AddTicks(7871),
                            IdClient = 1,
                            IdTable = 1,
                            NumOfPeople = 2,
                            ReservStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            DateReservation = new DateTime(2023, 7, 11, 22, 4, 2, 977, DateTimeKind.Local).AddTicks(7903),
                            IdClient = 2,
                            IdTable = 2,
                            NumOfPeople = 4,
                            ReservStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            DateReservation = new DateTime(2023, 7, 12, 22, 4, 2, 977, DateTimeKind.Local).AddTicks(7906),
                            IdClient = 3,
                            IdTable = 3,
                            NumOfPeople = 3,
                            ReservStatus = 1
                        },
                        new
                        {
                            Id = 4,
                            DateReservation = new DateTime(2023, 7, 13, 22, 4, 2, 977, DateTimeKind.Local).AddTicks(7908),
                            IdClient = 4,
                            IdTable = 4,
                            NumOfPeople = 6,
                            ReservStatus = 1
                        });
                });

            modelBuilder.Entity("SitemaTurnos.Entities.TableRestaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Disponibility")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TablesRestaurant");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 4,
                            Disponibility = 0
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 3,
                            Disponibility = 2
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            Disponibility = 1
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 1,
                            Disponibility = 2
                        });
                });

            modelBuilder.Entity("SitemaTurnos.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            LastName = "Doe",
                            Name = "John",
                            Password = "1234",
                            UserType = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "emma.smith@example.com",
                            LastName = "Smith",
                            Name = "Emma",
                            Password = "1234",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 3,
                            Email = "michael.johnson@example.com",
                            LastName = "Johnson",
                            Name = "Michael",
                            Password = "1234",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 4,
                            Email = "sophia.brown@example.com",
                            LastName = "Brown",
                            Name = "Sophia",
                            Password = "1234",
                            UserType = "Admin"
                        },
                        new
                        {
                            Id = 5,
                            Email = "robert.lee@example.com",
                            LastName = "Lee",
                            Name = "Robert",
                            Password = "1234",
                            UserType = "Manager"
                        });
                });

            modelBuilder.Entity("ReservationTableRestaurant", b =>
                {
                    b.HasOne("SitemaTurnos.Entities.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsAssignedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SitemaTurnos.Entities.TableRestaurant", null)
                        .WithMany()
                        .HasForeignKey("TablesRestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReservationUser", b =>
                {
                    b.HasOne("SitemaTurnos.Entities.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationsDoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SitemaTurnos.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
